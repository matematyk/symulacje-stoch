}
param <- (astar+across)*I[i-1]
Wi <- rexp(1, param)
Tn[i] <- Tn[i-1] + Wi
}
index <- length(Tn[Tn < 1])
plot(Tn[1:1000], X[1:1000] , type='s')
N <- 10^{5}
X <- numeric(N)
X[1] <- 1
astar <- 10
across <- 2
Tn <- numeric(N)
for (x in 2:N) {
K <- runif(1, 0, 1)
if (K < astar/(astar+across)){
X[x] = X[x-1]+1
} else {
X[x] = X[x-1]-1
}
param <- (astar+across)*I[x-1]
Wi <- rexp(1, param)
Tn[x] <- Tn[x-1] + Wi
}
index <- length(Tn[Tn < 1])
plot(Tn[1:1000], X[1:1000] , type='s')
N <- 10^{5}
X <- numeric(N)
X[1] <- 1
astar <- 10
across <- 2
Tn <- numeric(N)
for (x in 2:N) {
K <- runif(1, 0, 1)
if (K < across/(astar+across)){
X[x] = X[x-1]+1
} else {
X[x] = X[x-1]-1
}
param <- (astar+across)*I[x-1]
Wi <- rexp(1, param)
Tn[x] <- Tn[x-1] + Wi
}
index <- length(Tn[Tn < 1])
plot(Tn[1:1000], X[1:1000] , type='s')
N <- 10^{5}
X <- numeric(N)
X[1] <- 1
astar <- 10
across <- 2
Tn <- numeric(N)
for (x in 2:N) {
K <- runif(1, 0, 1)
if (K < astar/(astar+across)){
X[x] = X[x-1]+1
} else {
X[x] = X[x-1]-1
}
param <- (astar+across)*I[x-1]
Wi <- rexp(1, param)
Tn[x] <- Tn[x-1] + Wi
}
index <- length(Tn[Tn < 1])
plot(Tn[1:1000], X[1:1000] , type='s')
X
hist(X)
hist(X, probl=True)
N <- 10^{5}
X <- numeric(N)
X[1] <- 1
astar <- 10
across <- 2
Tn <- numeric(N)
for (x in 2:N) {
K <- runif(1, 0, 1)
if (K < astar/(astar+across)){
X[x] = X[x-1]+1
} else {
X[x] = X[x-1]-1
}
param <- (astar+across)*I[x-1]
Wi <- rexp(1, param)
Tn[x] <- Tn[x-1] + Wi
}
index <- length(Tn[Tn < 1])
hist(X, prob=TRUE)
plot(Tn[1:1000], X[1:1000] , type='s')
hist(X, prob=TRUE)
plot(Tn[1:1000], X[1:1000] , type='s')
N <- 10^{5}
X <- numeric(N)
X[1] <- 1
astar <- 10
across <- 2
Tn <- numeric(N)
for (x in 2:N) {
K <- runif(1, 0, 1)
if (K < astar/(astar+across)){
X[x] = X[x-1]+1
} else {
X[x] = X[x-1]-1
}
param <- (astar+across)
Wi <- rexp(1, param)
Tn[x] <- Tn[x-1] + Wi
}
index <- length(Tn[Tn < 1])
plot(Tn[1:1000], X[1:1000] , type='s')
hist(X, prob=TRUE)
plot(Tn[1:1000], X[1:1000] , type='s')
N <- 10^{5}
X <- numeric(N)
X[1] <- 1
astar <- 10
across <- 2
Tn <- numeric(N)
for (x in 2:N) {
K <- runif(1, 0, 1)
if (K < astar/(astar+across)){
X[x] = X[x-1]+1
} else {
X[x] = X[x-1]-1
}
param <- (astar+across)
Wi <- rexp(1, across)
Tn[x] <- Tn[x-1] + Wi
}
index <- length(Tn[Tn < 1])
plot(Tn[1:1000], X[1:1000] , type='s')
hist(X, prob=TRUE)
plot(Tn[1:1000], X[1:1000] , type='s')
T <- seq(from = 0, to = 1, by = 10)
N <- 10^5
alfa = 0.9
beta = 0.1
Tn <- numeric(N)
X <- numeric(N)
Tn[1] <- 0
X[1] <- 1
parm <- 1
W<- numeric(N)
for (i in 2:N) {
if (X[i-1] == 1){
X[i] <- 2
parm <- alfa
} else {
X[i] <- 1
parm <- beta
}
Wi <- rexp(1, parm)
W[i] <- Wi
Tn[i] <- Tn[i-1] + Wi
}
plot(Tn[1:100], X[1:100], type='s')
sum(W[X==1])/Tn[N]
sum(W[X==2])/Tn[N]
T <- seq(from = 0, to = 1, by = 10)
N <- 10^5
alfa = 0.1
beta = 0.1
Tn <- numeric(N)
X <- numeric(N)
Tn[1] <- 0
X[1] <- 1
parm <- 1
W<- numeric(N)
for (i in 2:N) {
if (X[i-1] == 1){
X[i] <- 2
parm <- alfa
} else {
X[i] <- 1
parm <- beta
}
Wi <- rexp(1, parm)
W[i] <- Wi
Tn[i] <- Tn[i-1] + Wi
}
plot(Tn[1:100], X[1:100], type='s')
sum(W[X==1])/Tn[N]
sum(W[X==2])/Tn[N]
T <- seq(from = 0, to = 1, by = 10)
N <- 10^5
alfa = 0.1
beta = 0.9
Tn <- numeric(N)
X <- numeric(N)
Tn[1] <- 0
X[1] <- 1
parm <- 1
W<- numeric(N)
for (i in 2:N) {
if (X[i-1] == 1){
X[i] <- 2
parm <- alfa
} else {
X[i] <- 1
parm <- beta
}
Wi <- rexp(1, parm)
W[i] <- Wi
Tn[i] <- Tn[i-1] + Wi
}
plot(Tn[1:100], X[1:100], type='s')
sum(W[X==1])/Tn[N]
sum(W[X==2])/Tn[N]
beta/(alfa+beta)
alfa/(alfa+beta)
Tn <- numeric(N)
X <- numeric(N)
Tn[1] <- 0
if (alfa/(alfa+beta) < runinf(1,0,1)){
X[1] <- 0
} else {
X[2] <- 1
}
parm <- 1
W<- numeric(N)
for (i in 2:N) {
if (X[i-1] == 1){
X[i] <- 2
parm <- alfa
} else {
X[i] <- 1
parm <- beta
}
Wi <- rexp(1, parm)
W[i] <- Wi
Tn[i] <- Tn[i-1] + Wi
}
plot(Tn[1:100], X[1:100], type='s')
sum(W[X==1])/Tn[N]
sum(W[X==2])/Tn[N]
Tn <- numeric(N)
X <- numeric(N)
Tn[1] <- 0
if (alfa/(alfa+beta) < runinf(1,0,1)){
X[1] <- 0
} else {
X[2] <- 1
}
parm <- 1
W<- numeric(N)
for (i in 2:N) {
if (X[i-1] == 1){
X[i] <- 2
parm <- alfa
} else {
X[i] <- 1
parm <- beta
}
Wi <- rexp(1, parm)
W[i] <- Wi
Tn[i] <- Tn[i-1] + Wi
}
plot(Tn[1:100], X[1:100], type='s')
sum(W[X==1])/Tn[N]
sum(W[X==2])/Tn[N]
Tn <- numeric(N)
X <- numeric(N)
Tn[1] <- 0
if (alfa/(alfa+beta) < runinf(1,0,1)){
X[1] <- 1
} else {
X[2] <- 2
}
parm <- 1
W<- numeric(N)
for (i in 2:N) {
if (X[i-1] == 1){
X[i] <- 2
parm <- alfa
} else {
X[i] <- 1
parm <- beta
}
Wi <- rexp(1, parm)
W[i] <- Wi
Tn[i] <- Tn[i-1] + Wi
}
plot(Tn[1:100], X[1:100], type='s')
sum(W[X==1])/Tn[N]
sum(W[X==2])/Tn[N]
beta/(alfa+beta)
alfa/(alfa+beta)
Tn <- numeric(N)
X <- numeric(N)
Tn[1] <- 0
if (alfa/(alfa+beta) < runinf(1,0,1)){
X[1] <- 1
} else {
X[1] <- 2
}
parm <- 1
W<- numeric(N)
for (i in 2:N) {
if (X[i-1] == 1){
X[i] <- 2
parm <- alfa
} else {
X[i] <- 1
parm <- beta
}
Wi <- rexp(1, parm)
W[i] <- Wi
Tn[i] <- Tn[i-1] + Wi
}
plot(Tn[1:100], X[1:100], type='s')
sum(W[X==1])/Tn[N]
sum(W[X==2])/Tn[N]
beta/(alfa+beta)
alfa/(alfa+beta)
Tn <- numeric(N)
X <- numeric(N)
Tn[1] <- 0
if (alfa/(alfa+beta) < runinf(1,0,1)){
X[1] <- 1
} else {
X[1] <- 2
}
parm <- 1
W<- numeric(N)
for (i in 2:N) {
if (X[i-1] == 1){
X[i] <- 2
parm <- alfa
} else {
X[i] <- 1
parm <- beta
}
Wi <- rexp(1, parm)
W[i] <- Wi
Tn[i] <- Tn[i-1] + Wi
}
plot(Tn[1:100], X[1:100], type='s')
N <- 10^{5}
I <- numeric(N)
I[1] <- 1
alfa <- 10
beta <- 2
Tn <- numeric(N)
for (i in 2:N) {
K <- runif(1, 0,1)
if (K < alfa/(alfa+beta)){
I[i] = I[i-1]+1
} else {
I[i] = I[i-1]-1
}
param <- (beta+alfa)*I[i-1]
Wi <- rexp(1, param)
#W[i] <- Wi
Tn[i] <- Tn[i-1] + Wi
}
index <- length(Tn[Tn < 1])
plot(Tn[1:1000], I[1:1000] , type='s')
curve(exp(x*(alfa-beta)), add=TRUE)
N <- 10^{5}
I <- numeric(N)
I[1] <- 1
alfa <- 10
beta <- 2
Tn <- numeric(N)
for (i in 2:N) {
K <- runif(1, 0,1)
if (K < alfa/(alfa+beta)){
I[i] = I[i-1]+1
} else {
I[i] = I[i-1]-1
}
param <- (beta+alfa)*I[i-1]
Wi <- rexp(1, param)
#W[i] <- Wi
Tn[i] <- Tn[i-1] + Wi
}
index <- length(Tn[Tn < 1])
plot(Tn[1:1000], I[1:1000] , type='s')
curve(exp(x*(alfa-beta)), add=TRUE)
N <- 10^{5}
I <- numeric(N)
I[1] <- 1
alfa <- 10
beta <- 2
Tn <- numeric(N)
for (i in 2:N) {
K <- runif(1, 0,1)
if (K < alfa/(alfa+beta)){
I[i] = I[i-1]+1
} else {
I[i] = I[i-1]-1
}
param <- (beta+alfa)*I[i-1]
Wi <- rexp(1, param)
#W[i] <- Wi
Tn[i] <- Tn[i-1] + Wi
}
index <- length(Tn[Tn < 1])
plot(Tn[1:1000], I[1:1000] , type='s')
curve(exp(x*(alfa-beta)), add=TRUE)
plot(Tn[1:1000], ln(I[1:1000]) , type='s')
ln
log
plot(Tn[1:1000], log(I[1:1000]) , type='s')
plot(Tn[1:1000], log(I[1:1000]) , type='s')
N <- 10^{5}
I <- numeric(N)
I[1] <- 1
alfa <- 10
beta <- 2
Tn <- numeric(N)
#(algorytm Gillespie’go).
for (i in 2:N) {
K <- runif(1, 0, 1)
if (K < alfa/(alfa+beta)){
I[i] = I[i-1]+1
} else {
I[i] = I[i-1]-1
}
param <- (beta+alfa)*I[i-1]
Wi <- rexp(1, param)
#W[i] <- Wi
Tn[i] <- Tn[i-1] + Wi
}
index <- length(Tn[Tn < 1])
plot(Tn[1:1000], I[1:1000] , type='s')
curve(exp(x*(alfa-beta)), add=TRUE)
N <- 10^{5}
I <- numeric(N)
I[1] <- 1
alfa <- 1
beta <- 2
Tn <- numeric(N)
#(algorytm Gillespie’go).
for (i in 2:N) {
K <- runif(1, 0, 1)
if (K < alfa/(alfa+beta)){
I[i] = I[i-1]+1
} else {
I[i] = I[i-1]-1
}
param <- (beta+alfa)*I[i-1]
Wi <- rexp(1, param)
#W[i] <- Wi
Tn[i] <- Tn[i-1] + Wi
}
index <- length(Tn[Tn < 1])
plot(Tn[1:1000], I[1:1000] , type='s')
curve(exp(x*(alfa-beta)), add=TRUE)
N <- 10^{5}
I <- numeric(N)
I[1] <- 1
alfa <- 1
beta <- 2
Tn <- numeric(N)
#(algorytm Gillespie’go).
for (i in 2:N) {
K <- runif(1, 0, 1)
if (K < alfa/(alfa+beta)){
I[i] = I[i-1]+1
} else {
I[i] = I[i-1]-1
}
param <- (beta+alfa)*I[i-1]
Wi <- rexp(1, param)
#W[i] <- Wi
Tn[i] <- Tn[i-1] + Wi
}
index <- length(Tn[Tn < 1])
plot(Tn[1:1000], I[1:1000] , type='s')
curve(exp(x*(alfa-beta)), add=TRUE)
#zbadaj symulacyjnie zbiezność do rozkładu stacjonarnego
hist(X, prob=TRUE)
N <- 10^{5}
X <- numeric(N)
X[1] <- 1
astar <- 10
across <- 2
Tn <- numeric(N)
for (x in 2:N) {
K <- runif(1, 0, 1)
if (K < astar/(astar+across)){
X[x] = X[x-1]+1
} else {
X[x] = X[x-1]-1
}
Wi <- rexp(1, across)
Tn[x] <- Tn[x-1] + Wi
}
index <- length(Tn[Tn < 1])
plot(Tn[1:1000], X[1:1000] , type='s')
#zbadaj symulacyjnie zbiezność do rozkładu stacjonarnego
hist(X, prob=TRUE)
length(X)
counts <- table(X)
barplot(counts)
N <- 10^{5}
X <- numeric(N)
X[1] <- 1
astar <- 10
across <- 2
Tn <- numeric(N)
for (x in 2:N) {
K <- runif(1, 0, 1)
if (K < astar/(astar+across)){
X[x] = X[x-1]+1
} else {
X[x] = X[x-1]-1
}
Wi <- rexp(1, across)
Tn[x] <- Tn[x-1] + Wi
}
index <- length(Tn[Tn < 1])
plot(Tn[1:1000], X[1:1000] , type='s')
